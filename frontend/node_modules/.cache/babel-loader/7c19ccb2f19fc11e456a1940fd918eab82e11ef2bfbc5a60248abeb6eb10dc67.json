{"ast":null,"code":"const sort = rects => rects.sort((A, B) => {\n  const top = (A.pageNumber || 0) * A.top - (B.pageNumber || 0) * B.top;\n  if (top === 0) {\n    return A.left - B.left;\n  }\n  return top;\n});\nconst overlaps = (A, B) => A.pageNumber === B.pageNumber && A.left <= B.left && B.left <= A.left + A.width;\nconst sameLine = (A, B, yMargin = 5) => A.pageNumber === B.pageNumber && Math.abs(A.top - B.top) < yMargin && Math.abs(A.height - B.height) < yMargin;\nconst inside = (A, B) => A.pageNumber === B.pageNumber && A.top > B.top && A.left > B.left && A.top + A.height < B.top + B.height && A.left + A.width < B.left + B.width;\nconst nextTo = (A, B, xMargin = 10) => {\n  const Aright = A.left + A.width;\n  const Bright = B.left + B.width;\n  return A.pageNumber === B.pageNumber && A.left <= B.left && Aright <= Bright && B.left - Aright <= xMargin;\n};\nconst extendWidth = (A, B) => {\n  A.width = Math.max(B.width - A.left + B.left, A.width);\n};\nconst optimizeClientRects = clientRects => {\n  const rects = sort(clientRects);\n  const toRemove = /* @__PURE__ */new Set();\n  const firstPass = rects.filter(rect => {\n    return rects.every(otherRect => {\n      return !inside(rect, otherRect);\n    });\n  });\n  let passCount = 0;\n  while (passCount <= 2) {\n    for (const A of firstPass) {\n      for (const B of firstPass) {\n        if (A === B || toRemove.has(A) || toRemove.has(B)) {\n          continue;\n        }\n        if (!sameLine(A, B)) {\n          continue;\n        }\n        if (overlaps(A, B)) {\n          extendWidth(A, B);\n          A.height = Math.max(A.height, B.height);\n          toRemove.add(B);\n        }\n        if (nextTo(A, B)) {\n          extendWidth(A, B);\n          toRemove.add(B);\n        }\n      }\n    }\n    passCount += 1;\n  }\n  return firstPass.filter(rect => !toRemove.has(rect));\n};\nexport { optimizeClientRects };","map":{"version":3,"names":["sort","rects","A","B","top","pageNumber","left","overlaps","width","sameLine","yMargin","Math","abs","height","inside","nextTo","xMargin","Aright","Bright","extendWidth","max","optimizeClientRects","clientRects","toRemove","Set","firstPass","filter","rect","every","otherRect","passCount","has","add"],"sources":["/Users/philipp/Documents/intership-projects-2025-main/frontend/node_modules/react-pdf-highlighter/dist/src/lib/optimize-client-rects.js"],"sourcesContent":["const sort = (rects) => rects.sort((A, B) => {\n  const top = (A.pageNumber || 0) * A.top - (B.pageNumber || 0) * B.top;\n  if (top === 0) {\n    return A.left - B.left;\n  }\n  return top;\n});\nconst overlaps = (A, B) => A.pageNumber === B.pageNumber && A.left <= B.left && B.left <= A.left + A.width;\nconst sameLine = (A, B, yMargin = 5) => A.pageNumber === B.pageNumber && Math.abs(A.top - B.top) < yMargin && Math.abs(A.height - B.height) < yMargin;\nconst inside = (A, B) => A.pageNumber === B.pageNumber && A.top > B.top && A.left > B.left && A.top + A.height < B.top + B.height && A.left + A.width < B.left + B.width;\nconst nextTo = (A, B, xMargin = 10) => {\n  const Aright = A.left + A.width;\n  const Bright = B.left + B.width;\n  return A.pageNumber === B.pageNumber && A.left <= B.left && Aright <= Bright && B.left - Aright <= xMargin;\n};\nconst extendWidth = (A, B) => {\n  A.width = Math.max(B.width - A.left + B.left, A.width);\n};\nconst optimizeClientRects = (clientRects) => {\n  const rects = sort(clientRects);\n  const toRemove = /* @__PURE__ */ new Set();\n  const firstPass = rects.filter((rect) => {\n    return rects.every((otherRect) => {\n      return !inside(rect, otherRect);\n    });\n  });\n  let passCount = 0;\n  while (passCount <= 2) {\n    for (const A of firstPass) {\n      for (const B of firstPass) {\n        if (A === B || toRemove.has(A) || toRemove.has(B)) {\n          continue;\n        }\n        if (!sameLine(A, B)) {\n          continue;\n        }\n        if (overlaps(A, B)) {\n          extendWidth(A, B);\n          A.height = Math.max(A.height, B.height);\n          toRemove.add(B);\n        }\n        if (nextTo(A, B)) {\n          extendWidth(A, B);\n          toRemove.add(B);\n        }\n      }\n    }\n    passCount += 1;\n  }\n  return firstPass.filter((rect) => !toRemove.has(rect));\n};\nexport {\n  optimizeClientRects\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/philipp/Documents/MoodHack/frontend/src/App.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  //TASK\n  //question and chatbot function\n  //after asking questions trigger handleTest\n  //get stats, playlist link from express\n\n  const handleLogin = () => {\n    // Redirect the user to the backend login endpoint and send with JSON \n    window.location.href = 'http://127.0.0.1:5001/api/login';\n  };\n\n  //Should activate automatically after chat is done\n  const handleTest = async () => {\n    try {\n      const response = await fetch('http://127.0.0.1:5001/api/post-queries', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n      console.log(data);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"bg-gray-100 py-3 p-4 shadow-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mx-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-3xl font-bold\",\n          children: \"MOODIFY\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center mt-14 text-4xl font-bold\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Mood-based Spotify playlists, powered by AI. \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","App","handleLogin","window","location","href","handleTest","response","fetch","method","headers","data","json","console","log","error","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/philipp/Documents/MoodHack/frontend/src/App.tsx"],"sourcesContent":["import React from 'react';\n\nconst App: React.FC = () => {\n\n  //TASK\n  //question and chatbot function\n  //after asking questions trigger handleTest\n  //get stats, playlist link from express\n\n\n  const handleLogin = () => {\n    // Redirect the user to the backend login endpoint and send with JSON \n    window.location.href = 'http://127.0.0.1:5001/api/login';\n  };\n\n\n\n  //Should activate automatically after chat is done\n  const handleTest = async () => {\n    try {\n      const response = await fetch('http://127.0.0.1:5001/api/post-queries', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      const data = await response.json();\n      console.log(data);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n\n\n\n\n\n  return (\n    <>\n\n\n      <nav className=\"bg-gray-100 py-3 p-4 shadow-lg\">\n        <div className=\"container mx-auto\">\n          <span className=\"text-3xl font-bold\">MOODIFY</span>\n        </div>\n      </nav>\n\n      <div className=\"flex justify-center mt-14 text-4xl font-bold\">\n        <h1>Mood-based Spotify playlists, powered by AI. </h1>\n      </div>\n\n\n\n\n    </>\n  );\n};\n\nexport default App;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,GAAa,GAAGA,CAAA,KAAM;EAE1B;EACA;EACA;EACA;;EAGA,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB;IACAC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,iCAAiC;EAC1D,CAAC;;EAID;EACA,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwC,EAAE;QACrEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MACF,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;IACnB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC;EACF,CAAC;EAOD,oBACEjB,OAAA,CAAAE,SAAA;IAAAgB,QAAA,gBAGElB,OAAA;MAAKmB,SAAS,EAAC,gCAAgC;MAAAD,QAAA,eAC7ClB,OAAA;QAAKmB,SAAS,EAAC,mBAAmB;QAAAD,QAAA,eAChClB,OAAA;UAAMmB,SAAS,EAAC,oBAAoB;UAAAD,QAAA,EAAC;QAAO;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENvB,OAAA;MAAKmB,SAAS,EAAC,8CAA8C;MAAAD,QAAA,eAC3DlB,OAAA;QAAAkB,QAAA,EAAI;MAA6C;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD,CAAC;EAAA,eAKN,CAAC;AAEP,CAAC;AAACC,EAAA,GAvDIrB,GAAa;AAyDnB,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
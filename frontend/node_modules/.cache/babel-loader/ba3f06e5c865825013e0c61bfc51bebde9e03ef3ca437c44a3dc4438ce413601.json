{"ast":null,"code":"var _jsxFileName = \"/Users/philipp/Documents/intership-projects-2025-main/frontend/src/features/Navbar.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Navbar({\n  setAvgScore,\n  setTick,\n  setQuestion,\n  setCross,\n  setDate,\n  date,\n  setHasClicked,\n  hasClicked,\n  setIsLoading,\n  isLoading,\n  setCompliance1,\n  setExit1,\n  setCost1,\n  setSla1,\n  setExit2,\n  setCost2,\n  setContractDuration1,\n  setPayment1,\n  setCompliance2,\n  setScope1,\n  setDataSec1,\n  setContractDuration2,\n  setSoftware1,\n  setOwn1,\n  setSla2,\n  setScope2,\n  setDataSec2,\n  setLegal1,\n  setLegal2,\n  setOwn2,\n  setPayment2,\n  setSoftware2,\n  counts\n}) {\n  _s();\n  //Date standard Value\n  let dateValue = 'No date available';\n  if (date) {\n    dateValue = date;\n  }\n\n  //Get Doc ID\n  const selectionSoftwareProductDocumentId = localStorage.getItem(\"selectionSoftwareProductDocumentId\");\n\n  //GET Avg Score via Query String \n  const handleGetAvgScore = async () => {\n    const AvgScoreUrl = `http://localhost:5001/api/contract-checker/get-contractAvgScore?selectionSoftwareProductDocumentId=${selectionSoftwareProductDocumentId}`;\n    const responseAvg = await fetch(AvgScoreUrl, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await responseAvg.text();\n    //Update State\n    setAvgScore(parseFloat(data));\n    console.log(data);\n  };\n\n  //GET Count Catergories\n  const handleGetContractClasses = async () => {\n    //Variables for ✅, ❌, and ❓\n    let tick = 0;\n    let cross = 0;\n    let questionMark = 0;\n    const ContractClassesUrl = `http://localhost:5001/api/contract-checker/get-contractClasses?selectionSoftwareProductDocumentId=${selectionSoftwareProductDocumentId}`;\n    try {\n      const ResponseContractClasses = await fetch(ContractClassesUrl, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const DataContractClassesText = await ResponseContractClasses.text();\n      const parsedData = JSON.parse(DataContractClassesText);\n      console.log(\"Parsed data:\", parsedData);\n\n      //Handle AI Results\n\n      // Create your quotes object dynamically : CHAT GPT SOLUTION\n      const quotes = {};\n\n      //item: item in the array, index: index of the current array\n      parsedData.results.forEach((item, index) => {\n        quotes[`quote${index + 1}`] = {\n          quote: item.quote,\n          type: item.type,\n          category: item.category\n        };\n      });\n\n      //Variables for AI Result Quotes\n      const Compliance1 = `${quotes.quote1.type} ${quotes.quote1.quote}`;\n      const Exit1 = `${quotes.quote2.type} ${quotes.quote2.quote}`;\n      const Cost1 = `${quotes.quote3.type} ${quotes.quote3.quote}`;\n      const Sla1 = `${quotes.quote4.type} ${quotes.quote4.quote}`;\n      const Exit2 = `${quotes.quote5.type} ${quotes.quote5.quote}`;\n      const Cost2 = `${quotes.quote6.type} ${quotes.quote6.quote}`;\n      const ContractDuration1 = `${quotes.quote7.type} ${quotes.quote7.quote}`;\n      const Payment1 = `${quotes.quote8.type} ${quotes.quote8.quote}`;\n      const Compliance2 = `${quotes.quote9.type} ${quotes.quote9.quote}`;\n      const Scope1 = `${quotes.quote10.type} ${quotes.quote10.quote}`;\n      const DataSec1 = `${quotes.quote11.type} ${quotes.quote11.quote}`;\n      const ContractDuration2 = `${quotes.quote12.type} ${quotes.quote12.quote}`;\n      const Software1 = `${quotes.quote13.type} ${quotes.quote13.quote}`;\n      const Own1 = `${quotes.quote14.type} ${quotes.quote14.quote}`;\n      const Sla2 = `${quotes.quote15.type} ${quotes.quote15.quote}`;\n      const Scope2 = `${quotes.quote16.type} ${quotes.quote16.quote}`;\n      const DataSec2 = `${quotes.quote17.type} ${quotes.quote17.quote}`;\n      const Legal1 = `${quotes.quote18.type} ${quotes.quote18.quote}`;\n      const Legal2 = `${quotes.quote19.type} ${quotes.quote19.quote}`;\n      const Own2 = `${quotes.quote20.type} ${quotes.quote20.quote}`;\n      const Payment2 = `${quotes.quote21.type} ${quotes.quote21.quote}`;\n      const Software2 = `${quotes.quote22.type} ${quotes.quote22.quote}`;\n\n      //Set AI Result \n      setCompliance1(Compliance1);\n      setExit1(Exit1);\n      setCost1(Cost1);\n      setSla1(Sla1);\n      setExit2(Exit2);\n      setCost2(Cost2);\n      setContractDuration1(ContractDuration1);\n      setPayment1(Payment1);\n      setCompliance2(Compliance2);\n      setScope1(Scope1);\n      setDataSec1(DataSec1);\n      setContractDuration2(ContractDuration2);\n      setSoftware1(Software1);\n      setOwn1(Own1);\n      setSla2(Sla2);\n      setScope2(Scope2);\n      setDataSec2(DataSec2);\n      setLegal1(Legal1);\n      setLegal2(Legal2);\n      setOwn2(Own2);\n      setPayment2(Payment2);\n      setSoftware2(Software2);\n\n      //Handle Tick for each Category\n      // Count ticks by filtering arrays for \"✅\" entries\n      const scopeCount = [quotes.quote16.type, quotes.quote10.type].filter(x => x === \"✅\").length;\n      const softwareCount = [quotes.quote22.type, quotes.quote13.type].filter(x => x === \"✅\").length;\n      const paymentCount = [quotes.quote8.type, quotes.quote21.type].filter(x => x === \"✅\").length;\n      const dataSecCount = [quotes.quote17.type, quotes.quote11.type].filter(x => x === \"✅\").length;\n      const slaCount = [quotes.quote15.type, quotes.quote4.type].filter(x => x === \"✅\").length;\n      const ownCount = [quotes.quote14.type, quotes.quote20.type].filter(x => x === \"✅\").length;\n      const contractDurationCount = [quotes.quote12.type, quotes.quote7.type].filter(x => x === \"✅\").length;\n      const exitCount = [quotes.quote5.type, quotes.quote2.type].filter(x => x === \"✅\").length;\n      const legalCount = [quotes.quote18.type, quotes.quote19.type].filter(x => x === \"✅\").length;\n      const complianceCount = [quotes.quote1.type, quotes.quote9.type].filter(x => x === \"✅\").length;\n      const costCount = [quotes.quote6.type, quotes.quote3.type].filter(x => x === \"✅\").length;\n\n      //Update State\n      setCounts({\n        scope: scopeCount,\n        software: softwareCount,\n        payment: paymentCount,\n        dataSec: dataSecCount,\n        sla: slaCount,\n        own: ownCount,\n        contractDuration: contractDurationCount,\n        exit: exitCount,\n        legal: legalCount,\n        compliance: complianceCount,\n        cost: costCount\n      });\n\n      //Handle Tick, Cross, ? Counter \n      //Check if the data has a \"results\" property that is an array.\n\n      parsedData.results.forEach(item => {\n        console.log(item.type);\n        if (item.type === \"✅\") {\n          tick += 1;\n        } else if (item.type === \"❌\") {\n          cross += 1;\n        } else {\n          questionMark += 1;\n        }\n      });\n      setTick(tick);\n      setCross(cross);\n      setQuestion(questionMark);\n    } catch (error) {\n      //If there is no API avaible, enable AI Analyze Button\n      setHasClicked(false);\n      console.log(\"Error:\", error);\n    }\n  };\n\n  //GET date of AI results creation\n  const handleAiDateResult = async () => {\n    const ContractRunAiDateUrl = `http://localhost:5001/api/contract-checker/get-contractRunAiDate?selectionSoftwareProductDocumentId=${selectionSoftwareProductDocumentId}`;\n    const ResponseRunAiDate = await fetch(ContractRunAiDateUrl, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const RunAiDateResult = await ResponseRunAiDate.text();\n    console.log(RunAiDateResult);\n    setDate(RunAiDateResult);\n    setHasClicked(true);\n  };\n\n  //Get AvgScore , start once\n  useEffect(() => {\n    handleGetAvgScore();\n    handleGetContractClasses();\n    handleAiDateResult();\n  }, []);\n  const handleClick = async () => {\n    try {\n      //Disable AI Start Button\n      setHasClicked(true);\n\n      //Start AI\n      setIsLoading(true);\n      console.log(\"Start AI\");\n      const success = await fetch(\"http://localhost:5001/api/contract-checker/post-contractAiStart\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          selectionSoftwareProductDocumentId: selectionSoftwareProductDocumentId\n        })\n      });\n\n      //Get AvgScore if AI ran\n      if (success) {\n        handleGetAvgScore();\n        handleGetContractClasses();\n        handleAiDateResult();\n      }\n    } catch (error) {\n      console.log(\"Error:\", error);\n    } finally {\n      setIsLoading(false);\n      console.log(\"Done\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"bg-white h-16 flex items-center justify-between px-4 border-b-2 border-primary2\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-row items-center gap-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"font-sans text-sm\",\n        children: [\"Date created: \", dateValue]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"font-sans text-sm\",\n        children: \"contract.pdf\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        disabled: isLoading || hasClicked,\n        className: `${hasClicked ? 'bg-gray-400' : 'bg-black'} w-48 h-10 rounded-lg text-white font-sans`,\n        children: \"Ai Analyze\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 307,\n    columnNumber: 9\n  }, this);\n}\n_s(Navbar, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["useEffect","jsxDEV","_jsxDEV","Navbar","setAvgScore","setTick","setQuestion","setCross","setDate","date","setHasClicked","hasClicked","setIsLoading","isLoading","setCompliance1","setExit1","setCost1","setSla1","setExit2","setCost2","setContractDuration1","setPayment1","setCompliance2","setScope1","setDataSec1","setContractDuration2","setSoftware1","setOwn1","setSla2","setScope2","setDataSec2","setLegal1","setLegal2","setOwn2","setPayment2","setSoftware2","counts","_s","dateValue","selectionSoftwareProductDocumentId","localStorage","getItem","handleGetAvgScore","AvgScoreUrl","responseAvg","fetch","method","headers","data","text","parseFloat","console","log","handleGetContractClasses","tick","cross","questionMark","ContractClassesUrl","ResponseContractClasses","DataContractClassesText","parsedData","JSON","parse","quotes","results","forEach","item","index","quote","type","category","Compliance1","quote1","Exit1","quote2","Cost1","quote3","Sla1","quote4","Exit2","quote5","Cost2","quote6","ContractDuration1","quote7","Payment1","quote8","Compliance2","quote9","Scope1","quote10","DataSec1","quote11","ContractDuration2","quote12","Software1","quote13","Own1","quote14","Sla2","quote15","Scope2","quote16","DataSec2","quote17","Legal1","quote18","Legal2","quote19","Own2","quote20","Payment2","quote21","Software2","quote22","scopeCount","filter","x","length","softwareCount","paymentCount","dataSecCount","slaCount","ownCount","contractDurationCount","exitCount","legalCount","complianceCount","costCount","setCounts","scope","software","payment","dataSec","sla","own","contractDuration","exit","legal","compliance","cost","error","handleAiDateResult","ContractRunAiDateUrl","ResponseRunAiDate","RunAiDateResult","handleClick","success","body","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/philipp/Documents/intership-projects-2025-main/frontend/src/features/Navbar.tsx"],"sourcesContent":["import { useEffect} from 'react';\n\ninterface CategoryCounts {\n    scope: number;\n    software: number;\n    payment: number;\n    dataSec: number;\n    sla: number;\n    own: number;\n    contractDuration: number;\n    exit: number;\n    legal: number;\n    compliance: number;\n    cost: number;\n  }\n\n\ninterface NavbarProps {\n    setAvgScore: (score: number) => void;\n    setTick: (tick: number) => void;\n    setCross: (cross: number) => void;\n    setQuestion: (question: number) => void;\n    setDate: (date: string) => void;\n    date: string;\n    setHasClicked: (click: boolean) => void;\n    hasClicked: boolean;\n    //HERE\n    setIsLoading: (loading:boolean) => void;\n    isLoading: boolean;\n\n    setCompliance1: (value: string) => void;\n    setExit1: (value: string) => void;\n    setCost1: (value: string) => void;\n    setSla1: (value: string) => void;\n    setExit2: (value: string) => void;\n    setCost2: (value: string) => void;\n    setContractDuration1: (value: string) => void;\n    setPayment1: (value: string) => void;\n    setCompliance2: (value: string) => void;\n    setScope1: (value: string) => void;\n    setDataSec1: (value: string) => void;\n    setContractDuration2: (value: string) => void;\n    setSoftware1: (value: string) => void;\n    setOwn1: (value: string) => void;\n    setSla2: (value: string) => void;\n    setScope2: (value: string) => void;\n    setDataSec2: (value: string) => void;\n    setLegal1: (value: string) => void;\n    setLegal2: (value: string) => void;\n    setOwn2: (value: string) => void;\n    setPayment2: (value: string) => void;\n    setSoftware2: (value: string) => void;\n    counts: CategoryCounts;\n\n}\n\nfunction Navbar ({\n    setAvgScore, setTick, setQuestion, setCross, setDate, date, setHasClicked, hasClicked, setIsLoading, isLoading,\n    setCompliance1, setExit1, setCost1, setSla1, setExit2, setCost2, setContractDuration1, setPayment1,\n    setCompliance2, setScope1, setDataSec1, setContractDuration2, setSoftware1, setOwn1, setSla2,\n    setScope2, setDataSec2, setLegal1, setLegal2, setOwn2, setPayment2, setSoftware2, counts\n}: NavbarProps,) {\n\n    //Date standard Value\n    let dateValue = 'No date available';\n    if (date) {\n        dateValue = date;\n    }\n\n    //Get Doc ID\n    const selectionSoftwareProductDocumentId = localStorage.getItem(\"selectionSoftwareProductDocumentId\");\n\n\n    \n\n\n    //GET Avg Score via Query String \n    const handleGetAvgScore = async () => {\n        const AvgScoreUrl = `http://localhost:5001/api/contract-checker/get-contractAvgScore?selectionSoftwareProductDocumentId=${selectionSoftwareProductDocumentId}`;\n    \n        const responseAvg = await fetch(AvgScoreUrl, {\n            method: \"GET\",\n            headers: {\n            \"Content-Type\": \"application/json\",\n            },\n        })\n        const data = await responseAvg.text();\n        //Update State\n        setAvgScore(parseFloat(data));\n        console.log(data);\n    }\n\n    //GET Count Catergories\n    const handleGetContractClasses = async () => {\n        //Variables for ✅, ❌, and ❓\n        let tick = 0;\n        let cross = 0;\n        let questionMark = 0;\n\n        const ContractClassesUrl = `http://localhost:5001/api/contract-checker/get-contractClasses?selectionSoftwareProductDocumentId=${selectionSoftwareProductDocumentId}`;\n\n        try {\n\n\n            const ResponseContractClasses = await fetch(ContractClassesUrl, {\n                method: \"GET\",\n                headers: {\n                \"Content-Type\": \"application/json\",\n                },\n            })\n            const DataContractClassesText = await ResponseContractClasses.text();\n            const parsedData = JSON.parse(DataContractClassesText);\n            console.log(\"Parsed data:\", parsedData);\n    \n            //Handle AI Results\n    \n            // Create your quotes object dynamically : CHAT GPT SOLUTION\n            const quotes: Record<string, { quote: string; type: string; category: string }> = {};\n            \n\n            //item: item in the array, index: index of the current array\n            parsedData.results.forEach((item:any , index:any) => {\n            quotes[`quote${index + 1}`] = {\n                quote: item.quote,\n                type: item.type,\n                category: item.category,\n                };\n            });\n\n           \n            //Variables for AI Result Quotes\n            const Compliance1 = `${quotes.quote1.type} ${quotes.quote1.quote}`;\n            const Exit1 =  `${quotes.quote2.type} ${quotes.quote2.quote}`;\n            const Cost1 = `${quotes.quote3.type} ${quotes.quote3.quote}`;\n            const Sla1=  `${quotes.quote4.type} ${quotes.quote4.quote}`;\n            const Exit2 =  `${quotes.quote5.type} ${quotes.quote5.quote}`;\n            const Cost2 =  `${quotes.quote6.type} ${quotes.quote6.quote}`;\n            const ContractDuration1 = `${quotes.quote7.type} ${quotes.quote7.quote}`;\n            const Payment1 =  `${quotes.quote8.type} ${quotes.quote8.quote}`;\n            const Compliance2 = `${quotes.quote9.type} ${quotes.quote9.quote}`;\n            const Scope1=  `${quotes.quote10.type} ${quotes.quote10.quote}`;\n            const DataSec1 =  `${quotes.quote11.type} ${quotes.quote11.quote}`;\n            const ContractDuration2 =  `${quotes.quote12.type} ${quotes.quote12.quote}`;\n            const Software1 = `${quotes.quote13.type} ${quotes.quote13.quote}`;\n            const Own1 =  `${quotes.quote14.type} ${quotes.quote14.quote}`;\n            const Sla2 = `${quotes.quote15.type} ${quotes.quote15.quote}`;\n            const Scope2=  `${quotes.quote16.type} ${quotes.quote16.quote}`;\n            const DataSec2 =  `${quotes.quote17.type} ${quotes.quote17.quote}`;\n            const Legal1 =  `${quotes.quote18.type} ${quotes.quote18.quote}`;\n            const Legal2 = `${quotes.quote19.type} ${quotes.quote19.quote}`;\n            const Own2 =  `${quotes.quote20.type} ${quotes.quote20.quote}`;\n            const Payment2 = `${quotes.quote21.type} ${quotes.quote21.quote}`;\n            const Software2=  `${quotes.quote22.type} ${quotes.quote22.quote}`;\n    \n            //Set AI Result \n            setCompliance1(Compliance1);\n            setExit1(Exit1);\n            setCost1(Cost1);\n            setSla1(Sla1);\n            setExit2(Exit2);\n            setCost2(Cost2);\n            setContractDuration1(ContractDuration1);\n            setPayment1(Payment1);\n            setCompliance2(Compliance2);\n            setScope1(Scope1);\n            setDataSec1(DataSec1);\n            setContractDuration2(ContractDuration2);\n            setSoftware1(Software1);\n            setOwn1(Own1);\n            setSla2(Sla2);\n            setScope2(Scope2);\n            setDataSec2(DataSec2);\n            setLegal1(Legal1);\n            setLegal2(Legal2);\n            setOwn2(Own2);\n            setPayment2(Payment2);\n            setSoftware2(Software2);\n                    \n    \n    \n           //Handle Tick for each Category\n           // Count ticks by filtering arrays for \"✅\" entries\n            const scopeCount = [quotes.quote16.type, quotes.quote10.type].filter(x => x === \"✅\").length;\n            const softwareCount = [quotes.quote22.type, quotes.quote13.type].filter(x => x === \"✅\").length;\n            const paymentCount = [quotes.quote8.type, quotes.quote21.type].filter(x => x === \"✅\").length;\n            const dataSecCount = [quotes.quote17.type, quotes.quote11.type].filter(x => x === \"✅\").length;\n            const slaCount = [quotes.quote15.type, quotes.quote4.type].filter(x => x === \"✅\").length;\n            const ownCount = [quotes.quote14.type, quotes.quote20.type].filter(x => x === \"✅\").length;\n            const contractDurationCount = [quotes.quote12.type, quotes.quote7.type].filter(x => x === \"✅\").length;\n            const exitCount = [quotes.quote5.type, quotes.quote2.type].filter(x => x === \"✅\").length;\n            const legalCount = [quotes.quote18.type, quotes.quote19.type].filter(x => x === \"✅\").length;\n            const complianceCount = [quotes.quote1.type, quotes.quote9.type].filter(x => x === \"✅\").length;\n            const costCount = [quotes.quote6.type, quotes.quote3.type].filter(x => x === \"✅\").length;\n\n            //Update State\n            setCounts({\n                scope: scopeCount,\n                software: softwareCount,\n                payment: paymentCount,\n                dataSec: dataSecCount,\n                sla: slaCount,\n                own: ownCount,\n                contractDuration: contractDurationCount,\n                exit: exitCount,\n                legal: legalCount,\n                compliance: complianceCount,\n                cost: costCount,\n              });\n\n\n\n            //Handle Tick, Cross, ? Counter \n            //Check if the data has a \"results\" property that is an array.\n\n            \n\n            parsedData.results.forEach((item: any) => {\n                console.log(item.type);\n                if (item.type === \"✅\") {\n                    tick += 1;\n                } else if (item.type === \"❌\") {\n                    cross += 1;\n                } else {\n                    questionMark += 1;\n                }\n            });\n            \n           \n    \n            setTick(tick);\n            setCross(cross);\n            setQuestion(questionMark);\n        } catch (error) {\n\n            //If there is no API avaible, enable AI Analyze Button\n            setHasClicked(false);\n\n            console.log(\"Error:\", error);\n        }\n        \n    }\n\n\n    //GET date of AI results creation\n    const handleAiDateResult = async () => {\n        const ContractRunAiDateUrl = `http://localhost:5001/api/contract-checker/get-contractRunAiDate?selectionSoftwareProductDocumentId=${selectionSoftwareProductDocumentId}`;\n\n        const ResponseRunAiDate = await fetch(ContractRunAiDateUrl, {\n            method: \"GET\",\n            headers: {\n            \"Content-Type\": \"application/json\",\n        },\n    })\n        const RunAiDateResult = await ResponseRunAiDate.text();\n        console.log(RunAiDateResult);\n        setDate(RunAiDateResult);\n        setHasClicked(true);\n    }\n\n\n\n    //Get AvgScore , start once\n    useEffect(() => {\n        handleGetAvgScore();\n        handleGetContractClasses();\n        handleAiDateResult();\n\n    }, [])\n\n\n    const handleClick = async () => {\n        try {\n            //Disable AI Start Button\n            setHasClicked(true);\n\n\n            //Start AI\n            setIsLoading(true);\n            console.log(\"Start AI\")\n            const success = await fetch(\"http://localhost:5001/api/contract-checker/post-contractAiStart\", {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({ selectionSoftwareProductDocumentId: selectionSoftwareProductDocumentId }),\n            });\n            \n            //Get AvgScore if AI ran\n            if (success) {\n                handleGetAvgScore()\n                handleGetContractClasses();\n                handleAiDateResult();\n            }\n       \n        } catch (error) {\n            console.log(\"Error:\", error)\n\n        } finally {\n            setIsLoading(false)\n            console.log(\"Done\")\n        }\n    };\n    \n\n\n    return (\n        <nav className=\"bg-white h-16 flex items-center justify-between px-4 border-b-2 border-primary2\">\n            <div className=\"flex flex-row items-center gap-6\">\n                <h2 className=\"font-sans text-sm\">Date created: {dateValue}</h2>\n                <h2 className=\"font-sans text-sm\">contract.pdf</h2>\n            </div>\n            <div>\n                <button onClick={handleClick} disabled={isLoading || hasClicked} className={`${hasClicked ? 'bg-gray-400' : 'bg-black'} w-48 h-10 rounded-lg text-white font-sans`}>Ai Analyze</button>\n            </div>\n        </nav>\n    )\n}\n\nexport default Navbar;"],"mappings":";;AAAA,SAASA,SAAS,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAwDjC,SAASC,MAAMA,CAAE;EACbC,WAAW;EAAEC,OAAO;EAAEC,WAAW;EAAEC,QAAQ;EAAEC,OAAO;EAAEC,IAAI;EAAEC,aAAa;EAAEC,UAAU;EAAEC,YAAY;EAAEC,SAAS;EAC9GC,cAAc;EAAEC,QAAQ;EAAEC,QAAQ;EAAEC,OAAO;EAAEC,QAAQ;EAAEC,QAAQ;EAAEC,oBAAoB;EAAEC,WAAW;EAClGC,cAAc;EAAEC,SAAS;EAAEC,WAAW;EAAEC,oBAAoB;EAAEC,YAAY;EAAEC,OAAO;EAAEC,OAAO;EAC5FC,SAAS;EAAEC,WAAW;EAAEC,SAAS;EAAEC,SAAS;EAAEC,OAAO;EAAEC,WAAW;EAAEC,YAAY;EAAEC;AACzE,CAAC,EAAG;EAAAC,EAAA;EAEb;EACA,IAAIC,SAAS,GAAG,mBAAmB;EACnC,IAAI7B,IAAI,EAAE;IACN6B,SAAS,GAAG7B,IAAI;EACpB;;EAEA;EACA,MAAM8B,kCAAkC,GAAGC,YAAY,CAACC,OAAO,CAAC,oCAAoC,CAAC;;EAMrG;EACA,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IAClC,MAAMC,WAAW,GAAG,sGAAsGJ,kCAAkC,EAAE;IAE9J,MAAMK,WAAW,GAAG,MAAMC,KAAK,CAACF,WAAW,EAAE;MACzCG,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACT,cAAc,EAAE;MAChB;IACJ,CAAC,CAAC;IACF,MAAMC,IAAI,GAAG,MAAMJ,WAAW,CAACK,IAAI,CAAC,CAAC;IACrC;IACA7C,WAAW,CAAC8C,UAAU,CAACF,IAAI,CAAC,CAAC;IAC7BG,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;EACrB,CAAC;;EAED;EACA,MAAMK,wBAAwB,GAAG,MAAAA,CAAA,KAAY;IACzC;IACA,IAAIC,IAAI,GAAG,CAAC;IACZ,IAAIC,KAAK,GAAG,CAAC;IACb,IAAIC,YAAY,GAAG,CAAC;IAEpB,MAAMC,kBAAkB,GAAG,qGAAqGlB,kCAAkC,EAAE;IAEpK,IAAI;MAGA,MAAMmB,uBAAuB,GAAG,MAAMb,KAAK,CAACY,kBAAkB,EAAE;QAC5DX,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACT,cAAc,EAAE;QAChB;MACJ,CAAC,CAAC;MACF,MAAMY,uBAAuB,GAAG,MAAMD,uBAAuB,CAACT,IAAI,CAAC,CAAC;MACpE,MAAMW,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACH,uBAAuB,CAAC;MACtDR,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEQ,UAAU,CAAC;;MAEvC;;MAEA;MACA,MAAMG,MAAyE,GAAG,CAAC,CAAC;;MAGpF;MACAH,UAAU,CAACI,OAAO,CAACC,OAAO,CAAC,CAACC,IAAQ,EAAGC,KAAS,KAAK;QACrDJ,MAAM,CAAC,QAAQI,KAAK,GAAG,CAAC,EAAE,CAAC,GAAG;UAC1BC,KAAK,EAAEF,IAAI,CAACE,KAAK;UACjBC,IAAI,EAAEH,IAAI,CAACG,IAAI;UACfC,QAAQ,EAAEJ,IAAI,CAACI;QACf,CAAC;MACL,CAAC,CAAC;;MAGF;MACA,MAAMC,WAAW,GAAG,GAAGR,MAAM,CAACS,MAAM,CAACH,IAAI,IAAIN,MAAM,CAACS,MAAM,CAACJ,KAAK,EAAE;MAClE,MAAMK,KAAK,GAAI,GAAGV,MAAM,CAACW,MAAM,CAACL,IAAI,IAAIN,MAAM,CAACW,MAAM,CAACN,KAAK,EAAE;MAC7D,MAAMO,KAAK,GAAG,GAAGZ,MAAM,CAACa,MAAM,CAACP,IAAI,IAAIN,MAAM,CAACa,MAAM,CAACR,KAAK,EAAE;MAC5D,MAAMS,IAAI,GAAG,GAAGd,MAAM,CAACe,MAAM,CAACT,IAAI,IAAIN,MAAM,CAACe,MAAM,CAACV,KAAK,EAAE;MAC3D,MAAMW,KAAK,GAAI,GAAGhB,MAAM,CAACiB,MAAM,CAACX,IAAI,IAAIN,MAAM,CAACiB,MAAM,CAACZ,KAAK,EAAE;MAC7D,MAAMa,KAAK,GAAI,GAAGlB,MAAM,CAACmB,MAAM,CAACb,IAAI,IAAIN,MAAM,CAACmB,MAAM,CAACd,KAAK,EAAE;MAC7D,MAAMe,iBAAiB,GAAG,GAAGpB,MAAM,CAACqB,MAAM,CAACf,IAAI,IAAIN,MAAM,CAACqB,MAAM,CAAChB,KAAK,EAAE;MACxE,MAAMiB,QAAQ,GAAI,GAAGtB,MAAM,CAACuB,MAAM,CAACjB,IAAI,IAAIN,MAAM,CAACuB,MAAM,CAAClB,KAAK,EAAE;MAChE,MAAMmB,WAAW,GAAG,GAAGxB,MAAM,CAACyB,MAAM,CAACnB,IAAI,IAAIN,MAAM,CAACyB,MAAM,CAACpB,KAAK,EAAE;MAClE,MAAMqB,MAAM,GAAG,GAAG1B,MAAM,CAAC2B,OAAO,CAACrB,IAAI,IAAIN,MAAM,CAAC2B,OAAO,CAACtB,KAAK,EAAE;MAC/D,MAAMuB,QAAQ,GAAI,GAAG5B,MAAM,CAAC6B,OAAO,CAACvB,IAAI,IAAIN,MAAM,CAAC6B,OAAO,CAACxB,KAAK,EAAE;MAClE,MAAMyB,iBAAiB,GAAI,GAAG9B,MAAM,CAAC+B,OAAO,CAACzB,IAAI,IAAIN,MAAM,CAAC+B,OAAO,CAAC1B,KAAK,EAAE;MAC3E,MAAM2B,SAAS,GAAG,GAAGhC,MAAM,CAACiC,OAAO,CAAC3B,IAAI,IAAIN,MAAM,CAACiC,OAAO,CAAC5B,KAAK,EAAE;MAClE,MAAM6B,IAAI,GAAI,GAAGlC,MAAM,CAACmC,OAAO,CAAC7B,IAAI,IAAIN,MAAM,CAACmC,OAAO,CAAC9B,KAAK,EAAE;MAC9D,MAAM+B,IAAI,GAAG,GAAGpC,MAAM,CAACqC,OAAO,CAAC/B,IAAI,IAAIN,MAAM,CAACqC,OAAO,CAAChC,KAAK,EAAE;MAC7D,MAAMiC,MAAM,GAAG,GAAGtC,MAAM,CAACuC,OAAO,CAACjC,IAAI,IAAIN,MAAM,CAACuC,OAAO,CAAClC,KAAK,EAAE;MAC/D,MAAMmC,QAAQ,GAAI,GAAGxC,MAAM,CAACyC,OAAO,CAACnC,IAAI,IAAIN,MAAM,CAACyC,OAAO,CAACpC,KAAK,EAAE;MAClE,MAAMqC,MAAM,GAAI,GAAG1C,MAAM,CAAC2C,OAAO,CAACrC,IAAI,IAAIN,MAAM,CAAC2C,OAAO,CAACtC,KAAK,EAAE;MAChE,MAAMuC,MAAM,GAAG,GAAG5C,MAAM,CAAC6C,OAAO,CAACvC,IAAI,IAAIN,MAAM,CAAC6C,OAAO,CAACxC,KAAK,EAAE;MAC/D,MAAMyC,IAAI,GAAI,GAAG9C,MAAM,CAAC+C,OAAO,CAACzC,IAAI,IAAIN,MAAM,CAAC+C,OAAO,CAAC1C,KAAK,EAAE;MAC9D,MAAM2C,QAAQ,GAAG,GAAGhD,MAAM,CAACiD,OAAO,CAAC3C,IAAI,IAAIN,MAAM,CAACiD,OAAO,CAAC5C,KAAK,EAAE;MACjE,MAAM6C,SAAS,GAAG,GAAGlD,MAAM,CAACmD,OAAO,CAAC7C,IAAI,IAAIN,MAAM,CAACmD,OAAO,CAAC9C,KAAK,EAAE;;MAElE;MACAtD,cAAc,CAACyD,WAAW,CAAC;MAC3BxD,QAAQ,CAAC0D,KAAK,CAAC;MACfzD,QAAQ,CAAC2D,KAAK,CAAC;MACf1D,OAAO,CAAC4D,IAAI,CAAC;MACb3D,QAAQ,CAAC6D,KAAK,CAAC;MACf5D,QAAQ,CAAC8D,KAAK,CAAC;MACf7D,oBAAoB,CAAC+D,iBAAiB,CAAC;MACvC9D,WAAW,CAACgE,QAAQ,CAAC;MACrB/D,cAAc,CAACiE,WAAW,CAAC;MAC3BhE,SAAS,CAACkE,MAAM,CAAC;MACjBjE,WAAW,CAACmE,QAAQ,CAAC;MACrBlE,oBAAoB,CAACoE,iBAAiB,CAAC;MACvCnE,YAAY,CAACqE,SAAS,CAAC;MACvBpE,OAAO,CAACsE,IAAI,CAAC;MACbrE,OAAO,CAACuE,IAAI,CAAC;MACbtE,SAAS,CAACwE,MAAM,CAAC;MACjBvE,WAAW,CAACyE,QAAQ,CAAC;MACrBxE,SAAS,CAAC0E,MAAM,CAAC;MACjBzE,SAAS,CAAC2E,MAAM,CAAC;MACjB1E,OAAO,CAAC4E,IAAI,CAAC;MACb3E,WAAW,CAAC6E,QAAQ,CAAC;MACrB5E,YAAY,CAAC8E,SAAS,CAAC;;MAIxB;MACA;MACC,MAAME,UAAU,GAAG,CAACpD,MAAM,CAACuC,OAAO,CAACjC,IAAI,EAAEN,MAAM,CAAC2B,OAAO,CAACrB,IAAI,CAAC,CAAC+C,MAAM,CAACC,CAAC,IAAIA,CAAC,KAAK,GAAG,CAAC,CAACC,MAAM;MAC3F,MAAMC,aAAa,GAAG,CAACxD,MAAM,CAACmD,OAAO,CAAC7C,IAAI,EAAEN,MAAM,CAACiC,OAAO,CAAC3B,IAAI,CAAC,CAAC+C,MAAM,CAACC,CAAC,IAAIA,CAAC,KAAK,GAAG,CAAC,CAACC,MAAM;MAC9F,MAAME,YAAY,GAAG,CAACzD,MAAM,CAACuB,MAAM,CAACjB,IAAI,EAAEN,MAAM,CAACiD,OAAO,CAAC3C,IAAI,CAAC,CAAC+C,MAAM,CAACC,CAAC,IAAIA,CAAC,KAAK,GAAG,CAAC,CAACC,MAAM;MAC5F,MAAMG,YAAY,GAAG,CAAC1D,MAAM,CAACyC,OAAO,CAACnC,IAAI,EAAEN,MAAM,CAAC6B,OAAO,CAACvB,IAAI,CAAC,CAAC+C,MAAM,CAACC,CAAC,IAAIA,CAAC,KAAK,GAAG,CAAC,CAACC,MAAM;MAC7F,MAAMI,QAAQ,GAAG,CAAC3D,MAAM,CAACqC,OAAO,CAAC/B,IAAI,EAAEN,MAAM,CAACe,MAAM,CAACT,IAAI,CAAC,CAAC+C,MAAM,CAACC,CAAC,IAAIA,CAAC,KAAK,GAAG,CAAC,CAACC,MAAM;MACxF,MAAMK,QAAQ,GAAG,CAAC5D,MAAM,CAACmC,OAAO,CAAC7B,IAAI,EAAEN,MAAM,CAAC+C,OAAO,CAACzC,IAAI,CAAC,CAAC+C,MAAM,CAACC,CAAC,IAAIA,CAAC,KAAK,GAAG,CAAC,CAACC,MAAM;MACzF,MAAMM,qBAAqB,GAAG,CAAC7D,MAAM,CAAC+B,OAAO,CAACzB,IAAI,EAAEN,MAAM,CAACqB,MAAM,CAACf,IAAI,CAAC,CAAC+C,MAAM,CAACC,CAAC,IAAIA,CAAC,KAAK,GAAG,CAAC,CAACC,MAAM;MACrG,MAAMO,SAAS,GAAG,CAAC9D,MAAM,CAACiB,MAAM,CAACX,IAAI,EAAEN,MAAM,CAACW,MAAM,CAACL,IAAI,CAAC,CAAC+C,MAAM,CAACC,CAAC,IAAIA,CAAC,KAAK,GAAG,CAAC,CAACC,MAAM;MACxF,MAAMQ,UAAU,GAAG,CAAC/D,MAAM,CAAC2C,OAAO,CAACrC,IAAI,EAAEN,MAAM,CAAC6C,OAAO,CAACvC,IAAI,CAAC,CAAC+C,MAAM,CAACC,CAAC,IAAIA,CAAC,KAAK,GAAG,CAAC,CAACC,MAAM;MAC3F,MAAMS,eAAe,GAAG,CAAChE,MAAM,CAACS,MAAM,CAACH,IAAI,EAAEN,MAAM,CAACyB,MAAM,CAACnB,IAAI,CAAC,CAAC+C,MAAM,CAACC,CAAC,IAAIA,CAAC,KAAK,GAAG,CAAC,CAACC,MAAM;MAC9F,MAAMU,SAAS,GAAG,CAACjE,MAAM,CAACmB,MAAM,CAACb,IAAI,EAAEN,MAAM,CAACa,MAAM,CAACP,IAAI,CAAC,CAAC+C,MAAM,CAACC,CAAC,IAAIA,CAAC,KAAK,GAAG,CAAC,CAACC,MAAM;;MAExF;MACAW,SAAS,CAAC;QACNC,KAAK,EAAEf,UAAU;QACjBgB,QAAQ,EAAEZ,aAAa;QACvBa,OAAO,EAAEZ,YAAY;QACrBa,OAAO,EAAEZ,YAAY;QACrBa,GAAG,EAAEZ,QAAQ;QACba,GAAG,EAAEZ,QAAQ;QACba,gBAAgB,EAAEZ,qBAAqB;QACvCa,IAAI,EAAEZ,SAAS;QACfa,KAAK,EAAEZ,UAAU;QACjBa,UAAU,EAAEZ,eAAe;QAC3Ba,IAAI,EAAEZ;MACR,CAAC,CAAC;;MAIJ;MACA;;MAIApE,UAAU,CAACI,OAAO,CAACC,OAAO,CAAEC,IAAS,IAAK;QACtCf,OAAO,CAACC,GAAG,CAACc,IAAI,CAACG,IAAI,CAAC;QACtB,IAAIH,IAAI,CAACG,IAAI,KAAK,GAAG,EAAE;UACnBf,IAAI,IAAI,CAAC;QACb,CAAC,MAAM,IAAIY,IAAI,CAACG,IAAI,KAAK,GAAG,EAAE;UAC1Bd,KAAK,IAAI,CAAC;QACd,CAAC,MAAM;UACHC,YAAY,IAAI,CAAC;QACrB;MACJ,CAAC,CAAC;MAIFnD,OAAO,CAACiD,IAAI,CAAC;MACb/C,QAAQ,CAACgD,KAAK,CAAC;MACfjD,WAAW,CAACkD,YAAY,CAAC;IAC7B,CAAC,CAAC,OAAOqF,KAAK,EAAE;MAEZ;MACAnI,aAAa,CAAC,KAAK,CAAC;MAEpByC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEyF,KAAK,CAAC;IAChC;EAEJ,CAAC;;EAGD;EACA,MAAMC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACnC,MAAMC,oBAAoB,GAAG,uGAAuGxG,kCAAkC,EAAE;IAExK,MAAMyG,iBAAiB,GAAG,MAAMnG,KAAK,CAACkG,oBAAoB,EAAE;MACxDjG,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACT,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC;IACE,MAAMkG,eAAe,GAAG,MAAMD,iBAAiB,CAAC/F,IAAI,CAAC,CAAC;IACtDE,OAAO,CAACC,GAAG,CAAC6F,eAAe,CAAC;IAC5BzI,OAAO,CAACyI,eAAe,CAAC;IACxBvI,aAAa,CAAC,IAAI,CAAC;EACvB,CAAC;;EAID;EACAV,SAAS,CAAC,MAAM;IACZ0C,iBAAiB,CAAC,CAAC;IACnBW,wBAAwB,CAAC,CAAC;IAC1ByF,kBAAkB,CAAC,CAAC;EAExB,CAAC,EAAE,EAAE,CAAC;EAGN,MAAMI,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACA;MACAxI,aAAa,CAAC,IAAI,CAAC;;MAGnB;MACAE,YAAY,CAAC,IAAI,CAAC;MAClBuC,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;MACvB,MAAM+F,OAAO,GAAG,MAAMtG,KAAK,CAAC,iEAAiE,EAAE;QAC3FC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDqG,IAAI,EAAEvF,IAAI,CAACwF,SAAS,CAAC;UAAE9G,kCAAkC,EAAEA;QAAmC,CAAC;MACnG,CAAC,CAAC;;MAEF;MACA,IAAI4G,OAAO,EAAE;QACTzG,iBAAiB,CAAC,CAAC;QACnBW,wBAAwB,CAAC,CAAC;QAC1ByF,kBAAkB,CAAC,CAAC;MACxB;IAEJ,CAAC,CAAC,OAAOD,KAAK,EAAE;MACZ1F,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEyF,KAAK,CAAC;IAEhC,CAAC,SAAS;MACNjI,YAAY,CAAC,KAAK,CAAC;MACnBuC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;IACvB;EACJ,CAAC;EAID,oBACIlD,OAAA;IAAKoJ,SAAS,EAAC,iFAAiF;IAAAC,QAAA,gBAC5FrJ,OAAA;MAAKoJ,SAAS,EAAC,kCAAkC;MAAAC,QAAA,gBAC7CrJ,OAAA;QAAIoJ,SAAS,EAAC,mBAAmB;QAAAC,QAAA,GAAC,gBAAc,EAACjH,SAAS;MAAA;QAAAkH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAChEzJ,OAAA;QAAIoJ,SAAS,EAAC,mBAAmB;QAAAC,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC,eACNzJ,OAAA;MAAAqJ,QAAA,eACIrJ,OAAA;QAAQ0J,OAAO,EAAEV,WAAY;QAACW,QAAQ,EAAEhJ,SAAS,IAAIF,UAAW;QAAC2I,SAAS,EAAE,GAAG3I,UAAU,GAAG,aAAa,GAAG,UAAU,4CAA6C;QAAA4I,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACtH,EAAA,CApQQlC,MAAM;AAAA2J,EAAA,GAAN3J,MAAM;AAsQf,eAAeA,MAAM;AAAC,IAAA2J,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
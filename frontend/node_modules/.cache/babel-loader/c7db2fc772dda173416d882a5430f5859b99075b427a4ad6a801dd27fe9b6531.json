{"ast":null,"code":"var _jsxFileName = \"/Users/philipp/Documents/intership-projects-2025-main/frontend/src/features/Navbar.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Navbar({\n  setAvgScore,\n  setTick,\n  setQuestion,\n  setCross,\n  setDate,\n  date\n}) {\n  _s();\n  //Date standard Value\n  let dateValue = 'No Date';\n  if (date) {\n    dateValue = dateValue;\n  }\n\n  //Get Doc ID\n  const selectionSoftwareProductDocumentId = localStorage.getItem(\"selectionSoftwareProductDocumentId\");\n\n  //State for loading\n  const [isLoading, setIsLoading] = useState(false);\n\n  //GET Avg Score via Query String \n  const handleGetAvgScore = async () => {\n    const AvgScoreUrl = `http://localhost:5001/api/contract-checker/get-contractAvgScore?selectionSoftwareProductDocumentId=${selectionSoftwareProductDocumentId}`;\n    const responseAvg = await fetch(AvgScoreUrl, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await responseAvg.text();\n    //Update State\n    setAvgScore(parseFloat(data));\n    console.log(data);\n  };\n\n  //GET Count Catergories\n  const handleGetContractClasses = async () => {\n    //Variables for ✅, ❌, and ❓\n    let tick = 0;\n    let cross = 0;\n    let questionMark = 0;\n    const ContractClassesUrl = `http://localhost:5001/api/contract-checker/get-contractClasses?selectionSoftwareProductDocumentId=${selectionSoftwareProductDocumentId}`;\n    const ResponseContractClasses = await fetch(ContractClassesUrl, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const DataContractClassesText = await ResponseContractClasses.text();\n    const parsedData = JSON.parse(DataContractClassesText);\n    console.log(\"Parsed data:\", parsedData);\n\n    // Check if the data has a \"results\" property that is an array.\n\n    parsedData.results.forEach(item => {\n      console.log(item.type);\n      if (item.type === \"✅\") {\n        tick += 1;\n      } else if (item.type === \"❌\") {\n        cross += 1;\n      } else {\n        questionMark += 1;\n      }\n    });\n    setTick(tick);\n    setCross(cross);\n    setQuestion(questionMark);\n  };\n\n  //GET date of AI results creation\n  const handleAiDateResult = async () => {\n    const ContractRunAiDateUrl = `http://localhost:5001/api/contract-checker/get-contractRunAiDate?selectionSoftwareProductDocumentId=${selectionSoftwareProductDocumentId}`;\n    const ResponseRunAiDate = await fetch(ContractRunAiDateUrl, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const RunAiDateResult = await ResponseRunAiDate.text();\n    console.log(RunAiDateResult);\n    setDate(RunAiDateResult);\n  };\n\n  //Get AvgScore , start once\n  useEffect(() => {\n    handleGetAvgScore();\n    handleGetContractClasses();\n    handleAiDateResult();\n  }, []);\n  const handleClick = async () => {\n    try {\n      //Start AI\n      setIsLoading(true);\n      console.log(\"Start AI\");\n      const success = await fetch(\"http://localhost:5001/api/contract-checker/post-contractAiStart\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          selectionSoftwareProductDocumentId: selectionSoftwareProductDocumentId\n        })\n      });\n\n      //Get AvgScore if AI ran\n      if (success) {\n        handleGetAvgScore();\n      }\n    } catch (error) {\n      console.log(\"Error:\", error);\n    } finally {\n      setIsLoading(false);\n      console.log(\"Done\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"bg-white h-16 flex items-center justify-between px-4 border-b-2 border-primary2\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-row items-center gap-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"font-sans text-sm\",\n        children: [\"Date created: \", dateValue]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"font-sans text-sm\",\n        children: \"contract.pdf\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        disabled: isLoading,\n        className: `${isLoading ? 'bg-gray-400' : 'bg-black'} w-48 h-10 rounded-lg text-white font-sans`,\n        children: \"Ai Analyze\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 9\n  }, this);\n}\n_s(Navbar, \"DlrQjwOD5XS1kcZJvMHoaf7KaZ8=\");\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Navbar","setAvgScore","setTick","setQuestion","setCross","setDate","date","_s","dateValue","selectionSoftwareProductDocumentId","localStorage","getItem","isLoading","setIsLoading","handleGetAvgScore","AvgScoreUrl","responseAvg","fetch","method","headers","data","text","parseFloat","console","log","handleGetContractClasses","tick","cross","questionMark","ContractClassesUrl","ResponseContractClasses","DataContractClassesText","parsedData","JSON","parse","results","forEach","item","type","handleAiDateResult","ContractRunAiDateUrl","ResponseRunAiDate","RunAiDateResult","handleClick","success","body","stringify","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/philipp/Documents/intership-projects-2025-main/frontend/src/features/Navbar.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\n\n\n\n\ninterface NavbarProps {\n    setAvgScore: (score: number) => void;\n    setTick: (tick: number) => void;\n    setCross: (cross: number) => void;\n    setQuestion: (question: number) => void;\n    setDate: (date: string) => void;\n    date: string;\n  }\n\n\n\n  \nfunction Navbar ({ setAvgScore, setTick, setQuestion, setCross, setDate, date}: NavbarProps) {\n\n    //Date standard Value\n    let dateValue = 'No Date';\n    if (date) {\n        dateValue = dateValue;\n    }\n\n    //Get Doc ID\n    const selectionSoftwareProductDocumentId = localStorage.getItem(\"selectionSoftwareProductDocumentId\");\n\n    //State for loading\n    const [isLoading, setIsLoading] =  useState(false);\n\n\n    //GET Avg Score via Query String \n    const handleGetAvgScore = async () => {\n        const AvgScoreUrl = `http://localhost:5001/api/contract-checker/get-contractAvgScore?selectionSoftwareProductDocumentId=${selectionSoftwareProductDocumentId}`;\n    \n        const responseAvg = await fetch(AvgScoreUrl, {\n            method: \"GET\",\n            headers: {\n            \"Content-Type\": \"application/json\",\n            },\n        })\n        const data = await responseAvg.text();\n        //Update State\n        setAvgScore(parseFloat(data));\n        console.log(data);\n    }\n\n    //GET Count Catergories\n    const handleGetContractClasses = async () => {\n        //Variables for ✅, ❌, and ❓\n        let tick = 0;\n        let cross = 0;\n        let questionMark = 0;\n\n        const ContractClassesUrl = `http://localhost:5001/api/contract-checker/get-contractClasses?selectionSoftwareProductDocumentId=${selectionSoftwareProductDocumentId}`;\n\n        const ResponseContractClasses = await fetch(ContractClassesUrl, {\n            method: \"GET\",\n            headers: {\n            \"Content-Type\": \"application/json\",\n            },\n        })\n        const DataContractClassesText = await ResponseContractClasses.text();\n        const parsedData = JSON.parse(DataContractClassesText);\n        console.log(\"Parsed data:\", parsedData);\n\n        // Check if the data has a \"results\" property that is an array.\n        \n        parsedData.results.forEach((item: any) => {\n            console.log(item.type);\n            if (item.type === \"✅\") {\n                tick += 1;\n            } else if (item.type === \"❌\") {\n                cross += 1;\n            } else {\n                questionMark += 1;\n            }\n        });\n\n        setTick(tick);\n        setCross(cross);\n        setQuestion(questionMark);\n    }\n\n\n    //GET date of AI results creation\n    const handleAiDateResult = async () => {\n        const ContractRunAiDateUrl = `http://localhost:5001/api/contract-checker/get-contractRunAiDate?selectionSoftwareProductDocumentId=${selectionSoftwareProductDocumentId}`;\n\n        const ResponseRunAiDate = await fetch(ContractRunAiDateUrl, {\n            method: \"GET\",\n            headers: {\n            \"Content-Type\": \"application/json\",\n        },\n    })\n        const RunAiDateResult = await ResponseRunAiDate.text();\n        console.log(RunAiDateResult);\n        setDate(RunAiDateResult);\n    }\n\n\n\n\n\n\n\n\n    //Get AvgScore , start once\n    useEffect(() => {\n        handleGetAvgScore();\n        handleGetContractClasses();\n        handleAiDateResult();\n    }, [])\n\n\n    const handleClick = async () => {\n        try {\n            //Start AI\n            setIsLoading(true);\n            console.log(\"Start AI\")\n            const success = await fetch(\"http://localhost:5001/api/contract-checker/post-contractAiStart\", {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({ selectionSoftwareProductDocumentId: selectionSoftwareProductDocumentId }),\n            });\n            \n            //Get AvgScore if AI ran\n            if (success) {\n                handleGetAvgScore()\n            }\n       \n        } catch (error) {\n            console.log(\"Error:\", error)\n\n        } finally {\n            setIsLoading(false)\n            console.log(\"Done\")\n        }\n    };\n    \n\n\n    return (\n        <nav className=\"bg-white h-16 flex items-center justify-between px-4 border-b-2 border-primary2\">\n            <div className=\"flex flex-row items-center gap-6\">\n                <h2 className=\"font-sans text-sm\">Date created: {dateValue}</h2>\n                <h2 className=\"font-sans text-sm\">contract.pdf</h2>\n            </div>\n            <div>\n                <button onClick={handleClick} disabled={isLoading} className={`${isLoading ? 'bg-gray-400' : 'bg-black'} w-48 h-10 rounded-lg text-white font-sans`}>Ai Analyze</button>\n            </div>\n        </nav>\n    )\n}\n\nexport default Navbar;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAiB5C,SAASC,MAAMA,CAAE;EAAEC,WAAW;EAAEC,OAAO;EAAEC,WAAW;EAAEC,QAAQ;EAAEC,OAAO;EAAEC;AAAiB,CAAC,EAAE;EAAAC,EAAA;EAEzF;EACA,IAAIC,SAAS,GAAG,SAAS;EACzB,IAAIF,IAAI,EAAE;IACNE,SAAS,GAAGA,SAAS;EACzB;;EAEA;EACA,MAAMC,kCAAkC,GAAGC,YAAY,CAACC,OAAO,CAAC,oCAAoC,CAAC;;EAErG;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAIhB,QAAQ,CAAC,KAAK,CAAC;;EAGlD;EACA,MAAMiB,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IAClC,MAAMC,WAAW,GAAG,sGAAsGN,kCAAkC,EAAE;IAE9J,MAAMO,WAAW,GAAG,MAAMC,KAAK,CAACF,WAAW,EAAE;MACzCG,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACT,cAAc,EAAE;MAChB;IACJ,CAAC,CAAC;IACF,MAAMC,IAAI,GAAG,MAAMJ,WAAW,CAACK,IAAI,CAAC,CAAC;IACrC;IACApB,WAAW,CAACqB,UAAU,CAACF,IAAI,CAAC,CAAC;IAC7BG,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;EACrB,CAAC;;EAED;EACA,MAAMK,wBAAwB,GAAG,MAAAA,CAAA,KAAY;IACzC;IACA,IAAIC,IAAI,GAAG,CAAC;IACZ,IAAIC,KAAK,GAAG,CAAC;IACb,IAAIC,YAAY,GAAG,CAAC;IAEpB,MAAMC,kBAAkB,GAAG,qGAAqGpB,kCAAkC,EAAE;IAEpK,MAAMqB,uBAAuB,GAAG,MAAMb,KAAK,CAACY,kBAAkB,EAAE;MAC5DX,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACT,cAAc,EAAE;MAChB;IACJ,CAAC,CAAC;IACF,MAAMY,uBAAuB,GAAG,MAAMD,uBAAuB,CAACT,IAAI,CAAC,CAAC;IACpE,MAAMW,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACH,uBAAuB,CAAC;IACtDR,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEQ,UAAU,CAAC;;IAEvC;;IAEAA,UAAU,CAACG,OAAO,CAACC,OAAO,CAAEC,IAAS,IAAK;MACtCd,OAAO,CAACC,GAAG,CAACa,IAAI,CAACC,IAAI,CAAC;MACtB,IAAID,IAAI,CAACC,IAAI,KAAK,GAAG,EAAE;QACnBZ,IAAI,IAAI,CAAC;MACb,CAAC,MAAM,IAAIW,IAAI,CAACC,IAAI,KAAK,GAAG,EAAE;QAC1BX,KAAK,IAAI,CAAC;MACd,CAAC,MAAM;QACHC,YAAY,IAAI,CAAC;MACrB;IACJ,CAAC,CAAC;IAEF1B,OAAO,CAACwB,IAAI,CAAC;IACbtB,QAAQ,CAACuB,KAAK,CAAC;IACfxB,WAAW,CAACyB,YAAY,CAAC;EAC7B,CAAC;;EAGD;EACA,MAAMW,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACnC,MAAMC,oBAAoB,GAAG,uGAAuG/B,kCAAkC,EAAE;IAExK,MAAMgC,iBAAiB,GAAG,MAAMxB,KAAK,CAACuB,oBAAoB,EAAE;MACxDtB,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACT,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC;IACE,MAAMuB,eAAe,GAAG,MAAMD,iBAAiB,CAACpB,IAAI,CAAC,CAAC;IACtDE,OAAO,CAACC,GAAG,CAACkB,eAAe,CAAC;IAC5BrC,OAAO,CAACqC,eAAe,CAAC;EAC5B,CAAC;;EASD;EACA9C,SAAS,CAAC,MAAM;IACZkB,iBAAiB,CAAC,CAAC;IACnBW,wBAAwB,CAAC,CAAC;IAC1Bc,kBAAkB,CAAC,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EAGN,MAAMI,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACA;MACA9B,YAAY,CAAC,IAAI,CAAC;MAClBU,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;MACvB,MAAMoB,OAAO,GAAG,MAAM3B,KAAK,CAAC,iEAAiE,EAAE;QAC3FC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACD0B,IAAI,EAAEZ,IAAI,CAACa,SAAS,CAAC;UAAErC,kCAAkC,EAAEA;QAAmC,CAAC;MACnG,CAAC,CAAC;;MAEF;MACA,IAAImC,OAAO,EAAE;QACT9B,iBAAiB,CAAC,CAAC;MACvB;IAEJ,CAAC,CAAC,OAAOiC,KAAK,EAAE;MACZxB,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEuB,KAAK,CAAC;IAEhC,CAAC,SAAS;MACNlC,YAAY,CAAC,KAAK,CAAC;MACnBU,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;IACvB;EACJ,CAAC;EAID,oBACIzB,OAAA;IAAKiD,SAAS,EAAC,iFAAiF;IAAAC,QAAA,gBAC5FlD,OAAA;MAAKiD,SAAS,EAAC,kCAAkC;MAAAC,QAAA,gBAC7ClD,OAAA;QAAIiD,SAAS,EAAC,mBAAmB;QAAAC,QAAA,GAAC,gBAAc,EAACzC,SAAS;MAAA;QAAA0C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAChEtD,OAAA;QAAIiD,SAAS,EAAC,mBAAmB;QAAAC,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC,eACNtD,OAAA;MAAAkD,QAAA,eACIlD,OAAA;QAAQuD,OAAO,EAAEX,WAAY;QAACY,QAAQ,EAAE3C,SAAU;QAACoC,SAAS,EAAE,GAAGpC,SAAS,GAAG,aAAa,GAAG,UAAU,4CAA6C;QAAAqC,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAAC9C,EAAA,CA3IQP,MAAM;AAAAwD,EAAA,GAANxD,MAAM;AA6If,eAAeA,MAAM;AAAC,IAAAwD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
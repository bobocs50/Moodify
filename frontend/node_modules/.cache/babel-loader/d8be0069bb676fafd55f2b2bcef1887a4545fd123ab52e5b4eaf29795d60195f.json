{"ast":null,"code":"var _jsxFileName = \"/Users/philipp/Documents/MoodHack/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  //question and chatbot function\n  const questions = [\"What is the best thing that has happend to you today?\", \"How would you describe your day to someone in just 3 sentences?\", \"What comes to mind when you're thinking of tomorrow or the days that follow?\", \"What are you working on in your free time and how is it going?\", \"What is something thats been stuck on your mind lately?\"];\n\n  // State to track current question index, user answers, and input value\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [chatCompleted, setChatCompleted] = useState(false);\n\n  // State to store the fetched catchMood data\n  const [catchMood, setCatchMood] = useState('-');\n\n  // Fetch catchMood only once when the component mounts\n  React.useEffect(() => {\n    const fetchCatchMood = async () => {\n      try {\n        const response = await fetch('http://127.0.0.1:5001/api/catchMood', {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        if (response.ok) {\n          const data = await response.json();\n          setCatchMood(data.mood); // Save only the 'mood' property in state\n          console.log('Catch Mood:', data);\n        } else {\n          console.error('Failed to fetch catchMood:', response.statusText);\n        }\n      } catch (error) {\n        console.error('Error fetching catchMood:', error);\n      }\n    };\n    fetchCatchMood();\n  }, []); // Empty dependency array ensures it runs only once\n\n  const handleLogin = () => {\n    // Redirect the user to the backend login endpoint and send with JSON \n    window.location.href = 'http://127.0.0.1:5001/api/login';\n  };\n  var playlistLink = \"\";\n\n  //Get playlist link from express\n  const getPlaylist = async () => {\n    try {\n      const response = await fetch('http://127.0.0.1:5001/api/playlist', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n      playlistLink = data.playlistUrl;\n      console.log('Playlist Link:', playlistLink);\n      window.location.href = playlistLink;\n      return data;\n    } catch (error) {\n      console.error('Error fetching playlist:', error);\n      throw error;\n    }\n  };\n\n  //NOCO CODE!!!! START HERE\n  let updatedAnswers = [...userAnswers, inputValue];\n\n  // Handle input change\n  const handleSubmitAnswer = () => {\n    if (inputValue.trim() === '') return;\n\n    // Add the answer to our answers array\n    const updatedAnswers = [...userAnswers, inputValue];\n    setUserAnswers(updatedAnswers);\n\n    // Clear input field\n    setInputValue('');\n\n    // Move to next question / finish\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    } else {\n      // When all questions are completed\n      setChatCompleted(true);\n      console.log(\"Chat completed\");\n      //answers are sent to backend as json\n      console.log(\"User answers: \", updatedAnswers);\n      sendAnswersToAPI(); // when chatcmoleted send data to backendd\n    }\n  };\n\n  // Handle Enter key press\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      handleSubmitAnswer();\n    }\n  };\n  const sendAnswersToAPI = async () => {\n    const response = await fetch('http://127.0.0.1:5001/api/post-queries', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        answers: updatedAnswers\n      })\n    });\n    await response.json();\n  };\n\n  //NOCO CODE!!!! END HERE\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"bg-black py-3 p-4 shadow-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mx-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-2xl text-white font-bold\",\n          children: \"MOODIFY\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center mt-32 text-black text-4xl font-bold\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Mood-based Spotify playlists, powered by AI. \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center mt-10\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-24 bg-white w-text-w h-text-h rounded-3xl shadow-lg shadow-gray-500/50 border-2 \",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-col\",\n          children: [chatCompleted && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-center\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text-black text-lg mt-9 font-bold\",\n              children: [\"Current Mood: \", catchMood]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-center\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"h-80 w-chat-w mt-7 overflow-y-auto mb-4 p-3 border-2 shadow-lg border-gray-300 border-opacity-90 rounded-lg bg-white\",\n              children: [userAnswers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"font-medium text-black\",\n                  children: questions[index]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"pl-4 mt-1 text-gray-700\",\n                  children: answer\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 19\n                }, this)]\n              }, `qa-${index}`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 19\n              }, this)), !chatCompleted && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"font-medium text-black\",\n                children: questions[currentQuestionIndex]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 19\n              }, this), chatCompleted && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-spotify font-medium\",\n                children: \"Thank you for completing the mood check-in!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), !chatCompleted && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center mt-5\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center bg-gray-200 w-96 h-10 rounded-lg px-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/chat.png\",\n              alt: \"Chat Icon\",\n              className: \"w-6 h-6 mr-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: inputValue,\n              onChange: e => setInputValue(e.target.value),\n              onKeyDown: handleKeyPress,\n              placeholder: \"Type your answer here...\",\n              className: \"flex-grow bg-gray-200 placeholder-gray-600 focus:outline-none\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-around -space-x-24 mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleLogin,\n            className: \"bg-spotify w-button-w h-10 rounded-lg flex items-center justify-center space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/spotify.png\",\n              className: \"w-6 h-6\",\n              alt: \"Spotify Logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text-white text-sm font-medium\",\n              children: \"Login with Spotify\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: getPlaylist,\n            className: \"bg-gray-200 w-button-w h-10 rounded-lg ring-2 ring-inset ring-spotify\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"flex justify-center items-center h-full text-sm font-medium\",\n              children: \"Get Playlist\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute top-0 left-[800px] w-[1000px] h-[1000px] bg-spotify rounded-full opacity-30 filter blur-3xl -z-10\",\n      style: {\n        top: '-200px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute bottom-0 -left-[500px] w-[1000px] h-[1000px] bg-spotify rounded-full opacity-30 filter blur-3xl -z-10\",\n      style: {\n        bottom: '-400px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(App, \"c993HhziVdfkrIAZN4+mO5GN6/8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","questions","currentQuestionIndex","setCurrentQuestionIndex","userAnswers","setUserAnswers","inputValue","setInputValue","chatCompleted","setChatCompleted","catchMood","setCatchMood","useEffect","fetchCatchMood","response","fetch","method","headers","ok","data","json","mood","console","log","error","statusText","handleLogin","window","location","href","playlistLink","getPlaylist","playlistUrl","updatedAnswers","handleSubmitAnswer","trim","length","sendAnswersToAPI","handleKeyPress","e","key","body","JSON","stringify","answers","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","answer","index","src","alt","type","value","onChange","target","onKeyDown","placeholder","onClick","style","top","bottom","_c","$RefreshReg$"],"sources":["/Users/philipp/Documents/MoodHack/frontend/src/App.tsx"],"sourcesContent":["import { get } from 'http';\nimport React from 'react';\nimport { useState } from 'react';\n\nconst App: React.FC = () => {\n\n\n  //question and chatbot function\n  const questions= [\n    \"What is the best thing that has happend to you today?\",                 \n    \"How would you describe your day to someone in just 3 sentences?\",       \n    \"What comes to mind when you're thinking of tomorrow or the days that follow?\",   \n    \"What are you working on in your free time and how is it going?\",         \n    \"What is something thats been stuck on your mind lately?\" \n      ];\n  \n  \n  // State to track current question index, user answers, and input value\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [userAnswers, setUserAnswers] = useState<string[]>([]);\n  const [inputValue, setInputValue] = useState('');\n  const [chatCompleted, setChatCompleted] = useState(false);\n  \n  \n  // State to store the fetched catchMood data\n  const [catchMood, setCatchMood] = useState<string | null>('-');\n\n  // Fetch catchMood only once when the component mounts\n  React.useEffect(() => {\n    const fetchCatchMood = async () => {\n      try {\n        const response = await fetch('http://127.0.0.1:5001/api/catchMood', {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        });\n\n        if (response.ok) {\n          const data = await response.json();\n          setCatchMood(data.mood); // Save only the 'mood' property in state\n          console.log('Catch Mood:', data);\n        } else {\n          console.error('Failed to fetch catchMood:', response.statusText);\n        }\n      } catch (error) {\n        console.error('Error fetching catchMood:', error);\n      }\n    };\n\n    fetchCatchMood();\n  }, []); // Empty dependency array ensures it runs only once\n\n\n\n\n  const handleLogin = () => {\n    // Redirect the user to the backend login endpoint and send with JSON \n    window.location.href = 'http://127.0.0.1:5001/api/login';\n  };\n\n  var playlistLink = \"\";\n\n  //Get playlist link from express\n  const getPlaylist = async () => {\n    try {\n      const response = await fetch('http://127.0.0.1:5001/api/playlist', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      const data = await response.json();\n      playlistLink = data.playlistUrl;\n      console.log('Playlist Link:', playlistLink);\n      window.location.href = playlistLink;\n\n      return data;\n\n    } catch (error) {\n      console.error('Error fetching playlist:', error);\n      throw error;\n    }\n  };\n\n\n  //NOCO CODE!!!! START HERE\n  let updatedAnswers = [...userAnswers, inputValue];\n\n  // Handle input change\n  const handleSubmitAnswer = () => {\n    if (inputValue.trim() === '') return;\n\n    // Add the answer to our answers array\n    const updatedAnswers = [...userAnswers, inputValue];\n    setUserAnswers(updatedAnswers);\n    \n    // Clear input field\n    setInputValue('');\n    \n    // Move to next question / finish\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    } else {\n      // When all questions are completed\n      setChatCompleted(true);\n      console.log(\"Chat completed\");\n      //answers are sent to backend as json\n      console.log(\"User answers: \", updatedAnswers);\n      \n  \n      sendAnswersToAPI(); // when chatcmoleted send data to backendd\n      \n    }\n  };\n\n  // Handle Enter key press\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter') {\n      handleSubmitAnswer();\n\n\n\n    }\n  };\n\n\n  const sendAnswersToAPI = async () => {\n    const response = await fetch('http://127.0.0.1:5001/api/post-queries', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ answers: updatedAnswers}),\n    });\n    await response.json(); \n  };\n  \n\n  //NOCO CODE!!!! END HERE\n\n\n\n\n\n\n\n\n  return (\n    <>\n      {/* Blur circle background */}\n      \n\n\n      {/* Navbar */}\n      <nav className=\"bg-black py-3 p-4 shadow-lg\">\n        <div className=\"container mx-auto\">\n          <span className=\"text-2xl text-white font-bold\">MOODIFY</span>\n        </div>\n      </nav>\n\n      {/* H1 Comment */}\n      <div className=\"flex justify-center mt-32 text-black text-4xl font-bold\">\n        <h1>Mood-based Spotify playlists, powered by AI. </h1>\n      </div>\n      \n      {/* Textbox */}\n\n      <div className=\"flex justify-center mt-10\"> \n        <div className=\"mt-24 bg-white w-text-w h-text-h rounded-3xl shadow-lg shadow-gray-500/50 border-2 \">\n\n          {/* Chat Section */}\n          <div className=\"flex-col\">\n            {chatCompleted && (\n              <div className=\"flex justify-center\">\n              <h1 className=\"text-black text-lg mt-9 font-bold\">Current Mood: {catchMood}</h1>\n              </div>\n            )}\n            \n\n            <div className=\"flex justify-center\">\n            <div className=\"h-80 w-chat-w mt-7 overflow-y-auto mb-4 p-3 border-2 shadow-lg border-gray-300 border-opacity-90 rounded-lg bg-white\">\n                {/* Display previous questions and answers */}\n                {userAnswers.map((answer, index) => (\n                  <div key={`qa-${index}`} className=\"mb-4\">\n                  <div className=\"font-medium text-black\">{questions[index]}</div>\n                  <div className=\"pl-4 mt-1 text-gray-700\">{answer}</div>\n                  </div>\n                ))}\n\n                {/* Current question */}\n                {!chatCompleted && (\n                  <div className=\"font-medium text-black\">\n                  {questions[currentQuestionIndex]}\n                  </div>\n                )}\n\n                {/* Completion message */}\n                {chatCompleted && (\n                  <div className=\"text-spotify font-medium\">\n                  Thank you for completing the mood check-in!\n                  </div>\n                )}\n                </div>\n\n            </div>\n    \n            \n            </div>\n                \n\n\n            {/* Input Box */}\n            {!chatCompleted && (\n            <div className=\"flex justify-center mt-5\">\n              <div className=\"flex items-center bg-gray-200 w-96 h-10 rounded-lg px-4\">\n              <img src=\"/chat.png\" alt=\"Chat Icon\" className=\"w-6 h-6 mr-4\" />\n              <input\n                type=\"text\"\n                value={inputValue}\n                onChange={(e) => setInputValue(e.target.value)}\n                onKeyDown={handleKeyPress}\n                placeholder=\"Type your answer here...\"\n                className=\"flex-grow bg-gray-200 placeholder-gray-600 focus:outline-none\"\n              />\n              </div>\n            </div>\n            )}\n\n\n\n\n          {/* Buttons */}\n            <div className=\"flex justify-around -space-x-24 mt-3\">\n                <button \n                  onClick={handleLogin} \n                  className=\"bg-spotify w-button-w h-10 rounded-lg flex items-center justify-center space-x-2\"\n                >\n                  <img src=\"/spotify.png\" className=\"w-6 h-6\" alt=\"Spotify Logo\" />\n                  <h1 className=\"text-white text-sm font-medium\">\n                  Login with Spotify\n                  </h1>\n                </button>\n\n                <button \n                  onClick={getPlaylist} \n                  className=\"bg-gray-200 w-button-w h-10 rounded-lg ring-2 ring-inset ring-spotify\"\n                >\n                  <h1 className=\"flex justify-center items-center h-full text-sm font-medium\">\n                  Get Playlist\n                  </h1>\n                </button>\n            </div>\n        </div>\n      </div>\n    \n      <div className=\"absolute top-0 left-[800px] w-[1000px] h-[1000px] bg-spotify rounded-full opacity-30 filter blur-3xl -z-10\" style={{ top: '-200px' }}></div>\n\n      <div className=\"absolute bottom-0 -left-[500px] w-[1000px] h-[1000px] bg-spotify rounded-full opacity-30 filter blur-3xl -z-10\" style={{ bottom: '-400px' }}></div>\n\n\n\n\n\n    </>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
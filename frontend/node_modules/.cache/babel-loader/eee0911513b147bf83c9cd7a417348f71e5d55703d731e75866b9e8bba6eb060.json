{"ast":null,"code":"var _jsxFileName = \"/Users/philipp/Documents/intership-projects-2025-main/frontend/src/features/Navbar.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Navbar({\n  setAvgScore,\n  setTick,\n  setQuestion,\n  setCross,\n  setDate,\n  date,\n  setHasClicked,\n  hasClicked\n}) {\n  _s();\n  //Date standard Value\n  let dateValue = 'No date available';\n  if (date) {\n    dateValue = date;\n  }\n\n  //Get Doc ID\n  const selectionSoftwareProductDocumentId = localStorage.getItem(\"selectionSoftwareProductDocumentId\");\n\n  //State for loading\n  const [isLoading, setIsLoading] = useState(false);\n\n  //GET Avg Score via Query String \n  const handleGetAvgScore = async () => {\n    const AvgScoreUrl = `http://localhost:5001/api/contract-checker/get-contractAvgScore?selectionSoftwareProductDocumentId=${selectionSoftwareProductDocumentId}`;\n    const responseAvg = await fetch(AvgScoreUrl, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await responseAvg.text();\n    //Update State\n    setAvgScore(parseFloat(data));\n    console.log(data);\n  };\n\n  //GET Count Catergories\n  const handleGetContractClasses = async () => {\n    //Variables for ✅, ❌, and ❓\n    let tick = 0;\n    let cross = 0;\n    let questionMark = 0;\n    const ContractClassesUrl = `http://localhost:5001/api/contract-checker/get-contractClasses?selectionSoftwareProductDocumentId=${selectionSoftwareProductDocumentId}`;\n    const ResponseContractClasses = await fetch(ContractClassesUrl, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const DataContractClassesText = await ResponseContractClasses.text();\n    const parsedData = JSON.parse(DataContractClassesText);\n    console.log(\"Parsed data:\", parsedData);\n\n    //Handle AI Results\n\n    // Create your quotes object dynamically : CHAT GPT SOLUTION\n    const quotes = {};\n    parsedData.results.forEach((item, index) => {\n      quotes[`quote${index + 1}`] = {\n        quote: item.quote,\n        type: item.type,\n        category: item.category\n      };\n    });\n\n    //Variables for AI Result Quotes\n    const Compliance1 = `${quotes.quote1.type} ${quotes.quote1.quote}`;\n    const Exit1 = `${quotes.quote2.type} ${quotes.quote2.quote}`;\n    const Cost1 = `${quotes.quote3.type} ${quotes.quote3.quote}`;\n    const Sla1 = `${quotes.quote4.type} ${quotes.quote4.quote}`;\n    const Exit2 = `${quotes.quote5.type} ${quotes.quote5.quote}`;\n    const Cost2 = `${quotes.quote6.type} ${quotes.quote6.quote}`;\n    const ContractDuration1 = `${quotes.quote7.type} ${quotes.quote7.quote}`;\n    const Payment1 = `${quotes.quote8.type} ${quotes.quote8.quote}`;\n    const Compliance2 = `${quotes.quote9.type} ${quotes.quote9.quote}`;\n    const Scope1 = `${quotes.quote10.type} ${quotes.quote10.quote}`;\n    const DataSec1 = `${quotes.quote11.type} ${quotes.quote11.quote}`;\n    const Cost4 = `${quotes.quote12.type} ${quotes.quote12.quote}`;\n    const Compliance3 = `${quotes.quote13.type} ${quotes.quote13.quote}`;\n    const Exit5 = `${quotes.quote14.type} ${quotes.quote14.quote}`;\n    const Cost5 = `${quotes.quote15.type} ${quotes.quote15.quote}`;\n    const Sla3 = `${quotes.quote16.type} ${quotes.quote16.quote}`;\n    const Exit6 = `${quotes.quote17.type} ${quotes.quote17.quote}`;\n    const Cost6 = `${quotes.quote18.type} ${quotes.quote18.quote}`;\n    const Compliance4 = `${quotes.quote19.type} ${quotes.quote19.quote}`;\n    const Exit7 = `${quotes.quote20.type} ${quotes.quote20.quote}`;\n    const Cost7 = `${quotes.quote21.type} ${quotes.quote21.quote}`;\n    const Sla4 = `${quotes.quote22.type} ${quotes.quote22.quote}`;\n    console.log(\"Quote1:\", quotes.quote12.quote);\n    console.log(\"Type1:\", quotes.quote12.type);\n    console.log(\"Category1:\", quotes.quote12.category);\n    console.log(\"Test:\", Exit1);\n\n    //Handle Tick, Cross, ? Counter \n    //Check if the data has a \"results\" property that is an array.\n    parsedData.results.forEach(item => {\n      console.log(item.type);\n      if (item.type === \"✅\") {\n        tick += 1;\n      } else if (item.type === \"❌\") {\n        cross += 1;\n      } else {\n        questionMark += 1;\n      }\n    });\n    setTick(tick);\n    setCross(cross);\n    setQuestion(questionMark);\n  };\n\n  //GET date of AI results creation\n  const handleAiDateResult = async () => {\n    const ContractRunAiDateUrl = `http://localhost:5001/api/contract-checker/get-contractRunAiDate?selectionSoftwareProductDocumentId=${selectionSoftwareProductDocumentId}`;\n    const ResponseRunAiDate = await fetch(ContractRunAiDateUrl, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const RunAiDateResult = await ResponseRunAiDate.text();\n    console.log(RunAiDateResult);\n    setDate(RunAiDateResult);\n    setHasClicked(true);\n  };\n\n  //Get AvgScore , start once\n  useEffect(() => {\n    handleGetAvgScore();\n    handleGetContractClasses();\n    handleAiDateResult();\n  }, []);\n  const handleClick = async () => {\n    try {\n      //Disable AI Start Button\n      setHasClicked(true);\n\n      //Start AI\n      setIsLoading(true);\n      console.log(\"Start AI\");\n      const success = await fetch(\"http://localhost:5001/api/contract-checker/post-contractAiStart\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          selectionSoftwareProductDocumentId: selectionSoftwareProductDocumentId\n        })\n      });\n\n      //Get AvgScore if AI ran\n      if (success) {\n        handleGetAvgScore();\n        handleGetContractClasses();\n        handleAiDateResult();\n      }\n    } catch (error) {\n      console.log(\"Error:\", error);\n    } finally {\n      setIsLoading(false);\n      console.log(\"Done\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"bg-white h-16 flex items-center justify-between px-4 border-b-2 border-primary2\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-row items-center gap-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"font-sans text-sm\",\n        children: [\"Date created: \", dateValue]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"font-sans text-sm\",\n        children: \"contract.pdf\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        disabled: isLoading,\n        className: `${hasClicked ? 'bg-gray-400' : 'bg-black'} w-48 h-10 rounded-lg text-white font-sans`,\n        children: \"Ai Analyze\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 9\n  }, this);\n}\n_s(Navbar, \"DlrQjwOD5XS1kcZJvMHoaf7KaZ8=\");\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Navbar","setAvgScore","setTick","setQuestion","setCross","setDate","date","setHasClicked","hasClicked","_s","dateValue","selectionSoftwareProductDocumentId","localStorage","getItem","isLoading","setIsLoading","handleGetAvgScore","AvgScoreUrl","responseAvg","fetch","method","headers","data","text","parseFloat","console","log","handleGetContractClasses","tick","cross","questionMark","ContractClassesUrl","ResponseContractClasses","DataContractClassesText","parsedData","JSON","parse","quotes","results","forEach","item","index","quote","type","category","Compliance1","quote1","Exit1","quote2","Cost1","quote3","Sla1","quote4","Exit2","quote5","Cost2","quote6","ContractDuration1","quote7","Payment1","quote8","Compliance2","quote9","Scope1","quote10","DataSec1","quote11","Cost4","quote12","Compliance3","quote13","Exit5","quote14","Cost5","quote15","Sla3","quote16","Exit6","quote17","Cost6","quote18","Compliance4","quote19","Exit7","quote20","Cost7","quote21","Sla4","quote22","handleAiDateResult","ContractRunAiDateUrl","ResponseRunAiDate","RunAiDateResult","handleClick","success","body","stringify","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/philipp/Documents/intership-projects-2025-main/frontend/src/features/Navbar.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\n\n\n\n\ninterface NavbarProps {\n    setAvgScore: (score: number) => void;\n    setTick: (tick: number) => void;\n    setCross: (cross: number) => void;\n    setQuestion: (question: number) => void;\n    setDate: (date: string) => void;\n    date: string;\n    setHasClicked: (click: boolean) => void;\n    hasClicked: boolean;\n  }\n\n\n\n  \nfunction Navbar ({ setAvgScore, setTick, setQuestion, setCross, setDate, date, setHasClicked, hasClicked}: NavbarProps) {\n\n    //Date standard Value\n    let dateValue = 'No date available';\n    if (date) {\n        dateValue = date;\n    }\n\n    //Get Doc ID\n    const selectionSoftwareProductDocumentId = localStorage.getItem(\"selectionSoftwareProductDocumentId\");\n\n    //State for loading\n    const [isLoading, setIsLoading] =  useState(false);\n    \n\n\n    //GET Avg Score via Query String \n    const handleGetAvgScore = async () => {\n        const AvgScoreUrl = `http://localhost:5001/api/contract-checker/get-contractAvgScore?selectionSoftwareProductDocumentId=${selectionSoftwareProductDocumentId}`;\n    \n        const responseAvg = await fetch(AvgScoreUrl, {\n            method: \"GET\",\n            headers: {\n            \"Content-Type\": \"application/json\",\n            },\n        })\n        const data = await responseAvg.text();\n        //Update State\n        setAvgScore(parseFloat(data));\n        console.log(data);\n    }\n\n    //GET Count Catergories\n    const handleGetContractClasses = async () => {\n        //Variables for ✅, ❌, and ❓\n        let tick = 0;\n        let cross = 0;\n        let questionMark = 0;\n\n        const ContractClassesUrl = `http://localhost:5001/api/contract-checker/get-contractClasses?selectionSoftwareProductDocumentId=${selectionSoftwareProductDocumentId}`;\n\n        const ResponseContractClasses = await fetch(ContractClassesUrl, {\n            method: \"GET\",\n            headers: {\n            \"Content-Type\": \"application/json\",\n            },\n        })\n        const DataContractClassesText = await ResponseContractClasses.text();\n        const parsedData = JSON.parse(DataContractClassesText);\n        console.log(\"Parsed data:\", parsedData);\n\n        //Handle AI Results\n\n        // Create your quotes object dynamically : CHAT GPT SOLUTION\n        const quotes: Record<string, { quote: string; type: string; category: string }> = {};\n\n        parsedData.results.forEach((item:any , index:any) => {\n        quotes[`quote${index + 1}`] = {\n            quote: item.quote,\n            type: item.type,\n            category: item.category,\n            };\n        });\n\n        //Variables for AI Result Quotes\n        const Compliance1 = `${quotes.quote1.type} ${quotes.quote1.quote}`;\n        const Exit1 =  `${quotes.quote2.type} ${quotes.quote2.quote}`;\n        const Cost1 = `${quotes.quote3.type} ${quotes.quote3.quote}`;\n        const Sla1=  `${quotes.quote4.type} ${quotes.quote4.quote}`;\n        const Exit2 =  `${quotes.quote5.type} ${quotes.quote5.quote}`;\n        const Cost2 =  `${quotes.quote6.type} ${quotes.quote6.quote}`;\n\n        const ContractDuration1 = `${quotes.quote7.type} ${quotes.quote7.quote}`;\n        const Payment1 =  `${quotes.quote8.type} ${quotes.quote8.quote}`;\n        const Compliance2 = `${quotes.quote9.type} ${quotes.quote9.quote}`;\n        const Scope1=  `${quotes.quote10.type} ${quotes.quote10.quote}`;\n        const DataSec1 =  `${quotes.quote11.type} ${quotes.quote11.quote}`;\n        const Cost4 =  `${quotes.quote12.type} ${quotes.quote12.quote}`;\n        const Compliance3 = `${quotes.quote13.type} ${quotes.quote13.quote}`;\n        const Exit5 =  `${quotes.quote14.type} ${quotes.quote14.quote}`;\n        const Cost5 = `${quotes.quote15.type} ${quotes.quote15.quote}`;\n        const Sla3=  `${quotes.quote16.type} ${quotes.quote16.quote}`;\n        const Exit6 =  `${quotes.quote17.type} ${quotes.quote17.quote}`;\n        const Cost6 =  `${quotes.quote18.type} ${quotes.quote18.quote}`;\n        const Compliance4 = `${quotes.quote19.type} ${quotes.quote19.quote}`;\n        const Exit7 =  `${quotes.quote20.type} ${quotes.quote20.quote}`;\n        const Cost7 = `${quotes.quote21.type} ${quotes.quote21.quote}`;\n        const Sla4=  `${quotes.quote22.type} ${quotes.quote22.quote}`;\n\n        console.log(\"Quote1:\" ,quotes.quote12.quote);\n        console.log(\"Type1:\", quotes.quote12.type);\n        console.log(\"Category1:\", quotes.quote12.category);\n        console.log(\"Test:\", Exit1)\n    \n        \n\n                \n\n\n\n\n       \n        //Handle Tick, Cross, ? Counter \n         //Check if the data has a \"results\" property that is an array.\n        parsedData.results.forEach((item: any) => {\n            console.log(item.type);\n            if (item.type === \"✅\") {\n                tick += 1;\n            } else if (item.type === \"❌\") {\n                cross += 1;\n            } else {\n                questionMark += 1;\n            }\n        });\n\n        setTick(tick);\n        setCross(cross);\n        setQuestion(questionMark);\n    }\n\n\n    //GET date of AI results creation\n    const handleAiDateResult = async () => {\n        const ContractRunAiDateUrl = `http://localhost:5001/api/contract-checker/get-contractRunAiDate?selectionSoftwareProductDocumentId=${selectionSoftwareProductDocumentId}`;\n\n        const ResponseRunAiDate = await fetch(ContractRunAiDateUrl, {\n            method: \"GET\",\n            headers: {\n            \"Content-Type\": \"application/json\",\n        },\n    })\n        const RunAiDateResult = await ResponseRunAiDate.text();\n        console.log(RunAiDateResult);\n        setDate(RunAiDateResult);\n        setHasClicked(true);\n    }\n\n\n\n\n\n\n\n\n    //Get AvgScore , start once\n    useEffect(() => {\n        handleGetAvgScore();\n        handleGetContractClasses();\n        handleAiDateResult();\n\n    }, [])\n\n\n    const handleClick = async () => {\n        try {\n            //Disable AI Start Button\n            setHasClicked(true);\n\n\n            //Start AI\n            setIsLoading(true);\n            console.log(\"Start AI\")\n            const success = await fetch(\"http://localhost:5001/api/contract-checker/post-contractAiStart\", {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({ selectionSoftwareProductDocumentId: selectionSoftwareProductDocumentId }),\n            });\n            \n            //Get AvgScore if AI ran\n            if (success) {\n                handleGetAvgScore()\n                handleGetContractClasses();\n                handleAiDateResult();\n            }\n       \n        } catch (error) {\n            console.log(\"Error:\", error)\n\n        } finally {\n            setIsLoading(false)\n            console.log(\"Done\")\n        }\n    };\n    \n\n\n    return (\n        <nav className=\"bg-white h-16 flex items-center justify-between px-4 border-b-2 border-primary2\">\n            <div className=\"flex flex-row items-center gap-6\">\n                <h2 className=\"font-sans text-sm\">Date created: {dateValue}</h2>\n                <h2 className=\"font-sans text-sm\">contract.pdf</h2>\n            </div>\n            <div>\n                <button onClick={handleClick} disabled={isLoading} className={`${hasClicked ? 'bg-gray-400' : 'bg-black'} w-48 h-10 rounded-lg text-white font-sans`}>Ai Analyze</button>\n            </div>\n        </nav>\n    )\n}\n\nexport default Navbar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}